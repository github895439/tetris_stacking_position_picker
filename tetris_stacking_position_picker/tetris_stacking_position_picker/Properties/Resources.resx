<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERROR_NOT_EXIST" xml:space="preserve">
    <value>存在するファイルを指定して下さい。</value>
  </data>
  <data name="STATUS_PICKING" xml:space="preserve">
    <value>抽出中</value>
  </data>
  <data name="ERROR_FAIL_OPEN" xml:space="preserve">
    <value>動画ファイルのオープンに失敗しました。</value>
  </data>
  <data name="ERROR_INPUT_EMPTY" xml:space="preserve">
    <value>動画ファイルを指定して下さい。</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="NEXT_自作" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\NEXT_自作.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="CONFIRM_LOAD_CAPTION" xml:space="preserve">
    <value>ロード確認</value>
  </data>
  <data name="プレイ開始_自作" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\プレイ開始_自作.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="INFO_COMPLETE_PICK" xml:space="preserve">
    <value>抽出が完了しました。</value>
  </data>
  <data name="INFO_STOP_PICK" xml:space="preserve">
    <value>抽出を中止しました。</value>
  </data>
  <data name="ERROR_TIMEOUT_LOADING_2" xml:space="preserve">
    <value>タイムアウト時間はアプリケーションの設定で変更できます。</value>
  </data>
  <data name="CONFIRM_LOAD_2" xml:space="preserve">
    <value>ファイルを全てロードしますか？</value>
  </data>
  <data name="CONFIRM_CLEAR_CAPTION" xml:space="preserve">
    <value>クリア確認</value>
  </data>
  <data name="HINT_POSITION_1" xml:space="preserve">
    <value>例えば、</value>
  </data>
  <data name="UNIT_FRAME" xml:space="preserve">
    <value>フレーム</value>
  </data>
  <data name="ERROR_KEEP_PICK" xml:space="preserve">
    <value>抽出を停止できないため、アプリケーションを終了して下さい。</value>
  </data>
  <data name="ERROR_TIMEOUT_LOADING_1" xml:space="preserve">
    <value>ロードがタイムアウトしました。</value>
  </data>
  <data name="CONFIRM_LOAD_3" xml:space="preserve">
    <value>(ロードを行うと本処理の進捗がわかるようになります。)</value>
  </data>
  <data name="CONFIRM_LOAD_1" xml:space="preserve">
    <value>ファイルが大きいため不明です。</value>
  </data>
  <data name="HINT_POSITION_4" xml:space="preserve">
    <value>③ファイルをペイントで開いて座標を特定する</value>
  </data>
  <data name="INFO_CONTENT_1" xml:space="preserve">
    <value>{0}{1}</value>
  </data>
  <data name="プレイ終了1_自作" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\プレイ終了1_自作.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="UNIT_FPS" xml:space="preserve">
    <value>fps</value>
  </data>
  <data name="CONFIRM_CLEAR" xml:space="preserve">
    <value>現在の動画ファイルをクリアしてよいですか？</value>
  </data>
  <data name="INFO_CONTENT_2" xml:space="preserve">
    <value>{2}{3}({4})</value>
  </data>
  <data name="HINT_POSITION_2" xml:space="preserve">
    <value>①動画をビデオのサイズでWindows Media Playerで再生して停める</value>
  </data>
  <data name="HINT_POSITION_3" xml:space="preserve">
    <value>②Windows Media PlayerをSnipping Toolでウィンドウキャプチャしてファイルに保存する</value>
  </data>
  <data name="プレイ終了2_自作" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\プレイ終了2_自作.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HINT_COLOR_1" xml:space="preserve">
    <value>例えば、</value>
  </data>
  <data name="HINT_COLOR_2" xml:space="preserve">
    <value>①動画をビデオのサイズでWindows Media Playerで再生して停める</value>
  </data>
  <data name="HINT_COLOR_3" xml:space="preserve">
    <value>②Windows Media PlayerをSnipping Toolでウィンドウキャプチャしてファイルに保存する</value>
  </data>
  <data name="HINT_COLOR_4" xml:space="preserve">
    <value>③ファイルをペイントで開き、スポイトで色を抽出し、色の編集で色値を確認する</value>
  </data>
  <data name="LOG_FIELD_FORMAT" xml:space="preserve">
    <value>field({2}f)</value>
  </data>
  <data name="LOG_GAME_END" xml:space="preserve">
    <value>game end</value>
  </data>
  <data name="LOG_GAME_START" xml:space="preserve">
    <value>game start</value>
  </data>
  <data name="LOG_TIMESTAMP_FORMAT" xml:space="preserve">
    <value>{0}({1}f):</value>
  </data>
  <data name="LOG_ERROR_UNKNOWN_MINO" xml:space="preserve">
    <value>[E]unknown mino</value>
  </data>
</root>